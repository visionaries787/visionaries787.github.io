<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>visionaries787</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gitee.com/visionaries787/blog/"/>
  <updated>2020-04-25T10:15:35.345Z</updated>
  <id>https://gitee.com/visionaries787/blog/</id>
  
  <author>
    <name>S*FWWIL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java高级特性-反射</title>
    <link href="https://gitee.com/visionaries787/blog/2020/04/25/Java%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7-%E5%8F%8D%E5%B0%84/"/>
    <id>https://gitee.com/visionaries787/blog/2020/04/25/Java%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7-%E5%8F%8D%E5%B0%84/</id>
    <published>2020-04-25T10:03:52.000Z</published>
    <updated>2020-04-25T10:15:35.345Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>定义：JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；这种动态获取信息及动态调用对象方法的功能称为java的反射机制。</p><p>java反射的实现主要借助一下四个类，也就是经过类加载器(ClassLoader)后形成的对象</p><table><thead><tr><th>类名</th><th>用途</th></tr></thead><tbody><tr><td>Class类</td><td>类的实体，在运行的java应用程序中表示类和接口</td></tr><tr><td>Field类</td><td>类的成员变量</td></tr><tr><td>Method类</td><td>类的成员方法</td></tr><tr><td>Constructor类</td><td>类的构造方法</td></tr></tbody></table><p><strong>好处：</strong></p><blockquote><ul><li>可以在程序运行过程中，操作这写对象；只要给定类名，就可以通过反射机制来获取类的所有信息</li><li>可以解耦，提高程序的可扩展性</li></ul></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="Class类"><a href="#Class类" class="headerlink" title="Class类"></a>Class类</h4><p><strong>1.获取Class对象的方式</strong></p><blockquote><ul><li><p>Class.forName(“全类名”)：将字节码文件加载进内存，返回Class对象</p><p><em>–多用于配置文件，将类名定义在配置文件中。读取文件，加载类</em></p></li><li><p>类名.class：通过类名的属性class获取</p><p>–<em>多用于参数的传递</em></p></li><li><p>对象.getClass()：Object类中的方法</p><p><em>–多用于对象获取字节码的方式</em></p></li></ul></blockquote><p>注：同一个字节码文件(*.class)在一次程序运行过程中，只会被加载一次，下列三种方式获取的Class对象都是同一个。</p><p><strong>2.Class对象方法</strong></p><table><thead><tr><th>获取类相关方法</th><th>解释</th></tr></thead><tbody><tr><td>asSubclass(Class<U> clazz)</td><td>把指定类的对象转换成代表其子类的对象</td></tr><tr><td>Cast</td><td>把对象转换成代表类或是接口的对象</td></tr><tr><td>getClassLoader()</td><td>获得类加载器</td></tr><tr><td>getClasses()</td><td>返回一个数组。数组中包含改类中所有公共类和接口类的对象</td></tr><tr><td>getDeclaredClasses()</td><td>返回一个数组，数组中包含该类中所有类和接口类的对象</td></tr><tr><td>forName(String className)</td><td>根据类名返回类的对象</td></tr><tr><td>getName()</td><td>获得类的完整路径名字</td></tr><tr><td>newInstance()</td><td>创建类的实例</td></tr><tr><td>getPackage()</td><td>获得类的包</td></tr><tr><td>getSimpleName()</td><td>获得类的名字</td></tr><tr><td>getSuperclass()</td><td>获得当前类继承的父类的名字</td></tr><tr><td>getInterfaces()</td><td>获得当前类实现的类或是接口</td></tr></tbody></table><table><thead><tr><th>获取类中属性</th><th>解释</th></tr></thead><tbody><tr><td>getField(String name)</td><td>获得某个公有的属性对象</td></tr><tr><td>getFields()</td><td>获得所有公有的属性对象</td></tr><tr><td>getDeclaredField(String name)</td><td>获得某个属性对象</td></tr><tr><td>getDeclaredFields()</td><td>获得所有属性对象</td></tr></tbody></table><table><thead><tr><th>获取类中构造方法</th><th>解释</th></tr></thead><tbody><tr><td>getConstructor(Class…&lt;?&gt; parameterTypes)</td><td>获得该类中与参数类型匹配的公有构造方法</td></tr><tr><td>getConstructors()</td><td>获得该类的所有公有构造方法</td></tr><tr><td>getDeclaredConstructor(Class…&lt;?&gt; parameterTypes)</td><td>获得该类中与参数类型匹配的构造方法</td></tr><tr><td>getDeclaredConstructors()</td><td>获得该类所有构造方法</td></tr></tbody></table><table><thead><tr><th>获取类中成员方法</th><th>解释</th></tr></thead><tbody><tr><td>getMethod(String name, Class…&lt;?&gt; parameterTypes)</td><td>获得该类某个公有的方法</td></tr><tr><td>getMethods()</td><td>获得该类所有公有的方法</td></tr><tr><td>getDeclaredMethod(String name, Class…&lt;?&gt; parameterTypes)</td><td>获得该类某个方法</td></tr><tr><td>getDeclaredMethods()</td><td>获得该类所有方法</td></tr></tbody></table><h4 id="Field类"><a href="#Field类" class="headerlink" title="Field类"></a>Field类</h4><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>equals(Object obj)</td><td>属性与obj相等则返回true</td></tr><tr><td>get(Object obj)</td><td>获得obj中对应的属性值</td></tr><tr><td>set(Object obj, Object value)</td><td>设置obj中对应属性值</td></tr></tbody></table><h4 id="Method类"><a href="#Method类" class="headerlink" title="Method类"></a>Method类</h4><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>invoke(Object obj, Object… args)</td><td>传递object对象及参数调用该对象对应的方法</td></tr></tbody></table><h4 id="Constructor类"><a href="#Constructor类" class="headerlink" title="Constructor类"></a>Constructor类</h4><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>newInstance(Object… initargs)</td><td>根据传递的参数创建类的对象</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="https://gitee.com/visionaries787/blog/categories/java/"/>
    
    
      <category term="java" scheme="https://gitee.com/visionaries787/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Linux中安装JDK和IDEA</title>
    <link href="https://gitee.com/visionaries787/blog/2020/04/11/Linux%E4%B8%AD%E5%AE%89%E8%A3%85JDK/"/>
    <id>https://gitee.com/visionaries787/blog/2020/04/11/Linux%E4%B8%AD%E5%AE%89%E8%A3%85JDK/</id>
    <published>2020-04-11T13:58:35.000Z</published>
    <updated>2020-04-18T07:34:14.670Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、安装环境"><a href="#一、安装环境" class="headerlink" title="一、安装环境"></a>一、安装环境</h3><ul><li>操作系统：deepin15.11</li><li>JDK版本：1.8</li></ul><h3 id="二、JDK安装"><a href="#二、JDK安装" class="headerlink" title="二、JDK安装"></a>二、JDK安装</h3><ol><li><p>去<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html" target="_blank" rel="noopener">官网</a>下载linux环境下载jdk1.8，这里下载的时候会提示登录oracle账号，我这边找了一个<a href="http://bugmenot.com/view/oracle.com" target="_blank" rel="noopener">oracle账号</a>网址，在里面找个账号登录就可以下载了</p></li><li><p>找到刚才下载的jdk文件并解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u241-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>将解压后的文件移到我们需要安装的位置，我这里安装在 /usr/local/java目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv jdk1.8.0_241 &#x2F;usr&#x2F;local&#x2F;java</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>按<code>i</code>进行编辑，在文件末尾添加以下配置后按 <code>:wq!</code>退出，重启生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_241</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH </span><br><span class="line">export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tool.jar</span><br></pre></td></tr></table></figure></li></ol><h3 id="三、IDEA安装"><a href="#三、IDEA安装" class="headerlink" title="三、IDEA安装"></a>三、IDEA安装</h3><ol><li><p><a href="https://www.jetbrains.com/zh-cn/idea/download/#section=linux" target="_blank" rel="noopener">官网</a>下载linux版本</p><p>  <img src="/" class="lazyload" data-src="4.linux%E4%B8%AD%E5%AE%89%E8%A3%85JDK.png"  alt=""></p></li><li><p>解压安装包后进入bin目录，执行<code>./ideash</code>命令安装</p><p><img src="/" class="lazyload" data-src="5.linux%E4%B8%AD%E5%AE%89%E8%A3%85JDK.png"  alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://gitee.com/visionaries787/blog/categories/linux/"/>
    
    
      <category term="java" scheme="https://gitee.com/visionaries787/blog/tags/java/"/>
    
      <category term="linux" scheme="https://gitee.com/visionaries787/blog/tags/linux/"/>
    
      <category term="环境" scheme="https://gitee.com/visionaries787/blog/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://gitee.com/visionaries787/blog/2020/02/18/hello-world/"/>
    <id>https://gitee.com/visionaries787/blog/2020/02/18/hello-world/</id>
    <published>2020-02-18T12:09:34.619Z</published>
    <updated>2020-04-18T07:19:18.247Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HellowOrld</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main（String[] args）&#123;</span><br><span class="line">        System.out.println(<span class="string">"HelloWorld!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
